jcd_venus = {
        'add_client'            : {'jstr' : '{"Command":{"Type":"Add Client","Client ID":"%s"},                                                  "Result" : {"Status":"NULL"}}', 'numofargs' : 1, 'help' : ['[Client ID]', 'Add a virtual client with a specific ID', 1]},
        'app_command'           : {'jstr' : '{"Command":{"Type":"Client Command","Client ID":"%s","Data":[%s]},                                  "Result" : {"Status":"NULL"}}', 'numofargs' : [1, []], 'help' : ['[Client ID][Data]', 'Send a generic command to a client (or all clients)', 2]},
        'app_command_data'      : {'jstr' : '{"Command":{"Type":"Client Command Data","Client ID":"%s"},                                         "Result" : {"Status":"NULL"}}', 'numofargs' : 1, 'help' : ['[Client ID]', 'Get client command data', 1]},
        'calibrate'             : {'jstr' : '{"Command":{"Type":"Calibrate"},                                                                    "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['[]', "Causes the transmitter to go through it's calibration process", 0]},
        'rx_config'             : {'jstr' : '{"Command":{"Type":"SetClientConfig","Client ID":"%s","QueryType":"%s"},                            "Result" : {"Status":"NULL"}}', 'numofargs' : 2, 'help' : ['[Client ID][QueryType(5=STD  6=EXT)]', 'Set configuration for a specific client', 2]},
        'rx_detail'             : {'jstr' : '{"Command":{"Type":"Get Client Detail","Client ID":"%s"},                                           "Result" : {"Status":"NULL"}}', 'numofargs' : 1, 'help' : ['[Client ID]', 'Get detailed information for a specific client', 1]},
        'rx_list'               : {'jstr' : '{"Command":{"Type":"Get List of Clients"},                                                          "Result" : {"Status":"NULL"}}', 'numofargs' : [0, 1], 'NotSet' : 'ns', 'help' : ['[]', 'Displays each client that is in the discovered state', 0]},
        'rx_sleep'              : {'jstr' : '{"Command":{"Type":"Client Command","Client ID":"%s","Data":["2"]},                                 "Result" : {"Status":"NULL"}}', 'numofargs' : 1, 'help' : ['[Client ID | all]', 'Command a client (or all) to enter deep sleep mode', 1]},
        'get_amb_on'            : {'jstr' : '{"Command":{"Type":"GetAmbOn"},                                                                     "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['[]', "Retrieves a mask showing which amb's are on", 0]},
        'get_comm_channel'      : {'jstr' : '{"Command":{"Type":"Get COM Channel"},                                                              "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['[]', 'Get current comm channel', 0]},
        'get_valid_amb_mask'    : {'jstr' : '{"Command":{"Type":"Get Good Channels"},                                                            "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['[]', 'Get valid ambs setting', 0]},
        'get_power_level'       : {'jstr' : '{"Command":{"Type":"GetPowerLevel"},                                                                "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['[]', 'Get current system power level in millidBm', 0]},
        'get_pu_on'             : {'jstr' : '{"Command":{"Type":"GetPuOn"},                                                                      "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['[]', "Retrieves a mask showing which AMB's pu's are on", 0]},
        'get_system_state'      : {'jstr' : '{"Command":{"Type":"GetSystemState"},                                                               "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['[]', 'Get the current system status', 0]},
        'get_system_temp'       : {'jstr' : '{"Command":{"Type":"GetSystemTemp"},                                                                "Result" : {"Status":"NULL"}}', 'numofargs' : 1, 'NotSet' : '0', 'help' : ['[Sensor Number]', 'Get the current system temperature', 0]},
        'get_tx_freq'           : {'jstr' : '{"Command":{"Type":"Get Tx Freq"},                                                                  "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['[]', 'Get the transmitter power frequency', 0]},
        'identify_tx'           : {'jstr' : '{"Command":{"Type":"IdentifyCharger"},                                                              "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['[]', 'Set the light ring to signal charger presence.', 0]},
        'identify_rx'           : {'jstr' : '{"Command":{"Type":"Client Command","Client ID":"%s","Data":["1 10"]},                              "Result" : {"Status":"NULL"}}', 'numofargs' : [1, 2], 'NotSet' : '5', 'help' : ['[Client ID][Duration]', "Identify the client (blink client's LED)", 2]},
        'pause'                 : {'jstr' : '{"Command":{"Type":"Pause"},                                                                        "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['[]', 'Pause the Power Cycle and enter debug mode', 0]},
        'proxy_command'         : {'jstr' : '{"Command":{"Type":"Proxy Command","Data":"%s"},                                                    "Result" : {"Status":"NULL"}}', 'numofargs' : [1, []], 'help' : ['[Data]', 'Send a generic command to the proxy', 1]},
        'proxy_command_data'    : {'jstr' : '{"Command":{"Type":"Proxy Command Data"},                                                           "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['[]', 'Get proxy command data', 0]},
        'proxy_info'            : {'jstr' : '{"Command":{"Type":"Get Proxy Info"},                                                               "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['[]', 'Get proxy Information: revision, status', 0]},
        'reboot'                : {'jstr' : '{"Command":{"Type":"Reboot CCB"},                                                                   "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['[]', 'Reboot the system (graceful channels shutdown and reboot)', 0]},
        'register_rx'           : {'jstr' : '{"Command":{"Type":"Register Client","Client ID":"%s","QueryType":"%s"},                            "Result" : {"Status":"NULL"}}', 'numofargs' : [1, 2], 'NotSet' : '5', 'help' : ['[Client ID [QueryType 5 or 6]]', 'Register a new client with the system that has been discovered.', 1]},
        'remove_rx'             : {'jstr' : '{"Command":{"Type":"Remove Client","Client ID":"%s"},                                               "Result" : {"Status":"NULL"}}', 'numofargs' : 1, 'help' : ['[Client ID]', 'Remove a client from the client list', 3]},
        'reset_array'           : {'jstr' : '{"Command":{"Type":"Reset Array"},                                                                  "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['', '', 0]},
        'reset_fpga'            : {'jstr' : '{"Command":{"Type":"Reset FPGA"},                                                                   "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['', '', 0]},
        'reset_proxy'           : {'jstr' : '{"Command":{"Type":"Reset Proxy"},                                                                  "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['[]', 'Resets the proxy and resends the discovery message', 0]},
        'restart'               : {'jstr' : '{"Command":{"Type":"Restart"},                                                                      "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['', '', 0]},
        'rssi_report'           : {'jstr' : '{"Command":{"Type":"RssiReport"},                                                                   "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['[]', 'Returns the rssi report values if TPS is frozen.', 1]},
        'run'                   : {'jstr' : '{"Command":{"Type":"Run"},                                                                          "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['[]', 'Start running the Power Cycle automatically', 0]},
        'send_disc'             : {'jstr' : '{"Command":{"Type":"Send Discovery Message", "COM Channel":"%s"},                                   "Result" : {"Status":"NULL"}}', 'numofargs' : [0, 1], 'NotSet' : '0', 'help' : ['[Channel]', 'Send a client discovery message. Channel is optional', 1]},
        'set_comm_channel'      : {'jstr' : '{"Command":{"Type":"Set COM Channel","COM Channel":"%s","Client ID":"%s"},                          "Result" : {"Status":"NULL"}}', 'numofargs' : [1, 2], 'NotSet' : '25', 'help' : ['[24-26 [Client ID]]', 'Set comm channel for the system', 1]},
        'set_valid_amb_en'      : {'jstr' : '{"Command":{"Type":"Set Good Channels","Good Channels":"%s"},                                       "Result" : {"Status":"NULL"}}', 'numofargs' : 1, 'help' : ['[0x0-0xF]', 'Set valid ambs to use as default settings', 1]},
        'set_power_level'       : {'jstr' : '{"Command":{"Type":"SetPowerLevel","PowerLevel":"%s"},                                              "Result" : {"Status":"NULL"}}', 'numofargs' : 1, 'NotSet' : '20', 'help' : ['[PowerLevel]', 'Configure system power level in dBm', 1]},
        'set_tx_freq'           : {'jstr' : '{"Command":{"Type":"SetTxFreq", "Frequency": "%s"},                                                 "Result" : {"Status":"NULL"}}', 'numofargs' : 1, 'NotSet' : '2450', 'help' : ['[Freq in Mhz]', 'Will set the transmit frequency. If 0, the com channel will be used to set the frequency.', 1]},
        'shutdown'              : {'jstr' : '{"Command":{"Type":"Shutdown CCB"},                                                                 "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['[Client ID | all]', 'Shutdown the system (optionally put clients to sleep as well)', 1]},
        'start_charging'        : {'jstr' : '{"Command":{"Type":"StartChargingDevices","Devices":["%s"]},                                        "Result" : {"Status":"NULL"}}', 'numofargs' : 1, 'help' : ['[long id | all]', 'Changes a ready device to the charging state, making it eligible for TPS', 1]},
        'stop_charging'         : {'jstr' : '{"Command":{"Type":"StopChargingDevices","Devices":["%s"]},                                         "Result" : {"Status":"NULL"}}', 'numofargs' : 1, 'help' : ['[long id | all]', 'Changes a charging device to the ready state', 1]},
        'versions'              : {'jstr' : '{"Command":{"Type":"GetChargerFirmwareVersion"},                                                    "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['[]', 'Get Driver  FW  OS  and build versions', 0]},
        'lpm_assign'            : {'jstr' : '{"Command":{"Type":"Lpm Assign","Client ID":"%s","Slot Number":"%s"},                               "Result" : {"Status":"NULL"}}', 'numofargs' : 2, 'help' : ['[Client ID][Slot Num]', 'Assign a lpm charge slot to a client', 2]},
        'lpm_free'              : {'jstr' : '{"Command":{"Type":"Lpm Free","Slot Number":"%s"},                                                  "Result" : {"Status":"NULL"}}', 'numofargs' : 1, 'help' : ['[Slot Number]', 'Free a lpm charge slot', 1]},
        'lpm_list'              : {'jstr' : '{"Command":{"Type":"Lpm List"},                                                                     "Result" : {"Status":"NULL"}}', 'numofargs' : 0, 'help' : ['[]', 'List all the lpm charge slots', 0]},
        'lpm'                   : {'jstr' : '{"Command":{"Type":"Lpm","State":"%s"},                                                             "Result" : {"Status":"NULL"}}', 'numofargs' : 1, 'help' : ['[On|Off]', 'Enables or disables lpm mode', 1]},
        'lpm_slots'             : {'jstr' : '{"Command":{"Type":"Lpm Slots","Slots":"%s"},                                                       "Result" : {"Status":"NULL"}}', 'numofargs' : 1, 'help' : ['[Number of Slots]', 'Sets the number of slots for lpm mode [1-40]', 1]},
        'client_lpm'            : {'jstr' : '{"Command":{"Type":"Client Lpm","Client ID":"%s","State":"%s"},                                     "Result" : {"Status":"NULL"}}', 'numofargs' : 2, 'help' : ['[Client ID][on|off]', 'Turns LPM on or off for a client', 2]},
}
